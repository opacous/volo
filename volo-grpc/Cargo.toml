[package]
name = "volo-grpc"
version = "0.6.0"
edition.workspace = true
homepage.workspace = true
repository.workspace = true
license.workspace = true
authors.workspace = true
description = "gRPC framework implementation of volo."
documentation = "https://docs.rs/volo-grpc"
readme = "README.md"
categories = ["asynchronous", "network-programming", "web-programming"]
keywords = ["async", "rpc", "grpc", "protobuf"]

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[badges]
maintenance = { status = "actively-developed" }

[dependencies]
pilota.workspace = true
volo = { version = "0.5", path = "../volo" }
motore = { workspace = true, features = ["tower"] }
metainfo.workspace = true
flume = "*"

anyhow.workspace = true
async-stream.workspace = true
async-trait.workspace = true
base64.workspace = true
bytes.workspace = true
fxhash.workspace = true
futures-util.workspace = true
futures.workspace = true
flate2.workspace = true
h2.workspace = true
hex.workspace = true
http-body.workspace = true
http.workspace = true
surf = "2.3.2"
matchit.workspace = true
percent-encoding.workspace = true
pin-project.workspace = true
#tokio = { workspace = true, features = ["time", "rt", "net", "sync", "signal"] }
tower = { workspace = true, features = [
    "buffer",
    "limit",
    "make",
    "util",
    "discover",
    "balance",
] }
tracing.workspace = true
pin-project-lite = "0.2.11"
async-std = { version = "1.12.0", features = [] }
async-io = "1.13.0"
http-types = "2.12.0"

[dev-dependencies]
tracing-subscriber.workspace = true
